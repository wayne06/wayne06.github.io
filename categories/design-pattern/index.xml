<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DESIGN PATTERN on WZhong</title>
    <link>http://wayne06.github.io/categories/design-pattern/</link>
    <description>Recent content in DESIGN PATTERN on WZhong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Mar 2020 00:04:12 +0800</lastBuildDate>
    
	<atom:link href="http://wayne06.github.io/categories/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>总结面向对象、设计原则、编程规范、重构技巧</title>
      <link>http://wayne06.github.io/post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83%E9%87%8D%E6%9E%84%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Wed, 18 Mar 2020 00:04:12 +0800</pubDate>
      
      <guid>http://wayne06.github.io/post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83%E9%87%8D%E6%9E%84%E6%8A%80%E5%B7%A7/</guid>
      <description>0. 代码质量评判标准 评价标准 可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性 可维护性、可读性、可扩展性又是提到最多的、最重要的三</description>
    </item>
    
    <item>
      <title>01 创建型模式</title>
      <link>http://wayne06.github.io/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F01%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 12 Mar 2020 00:04:12 +0800</pubDate>
      
      <guid>http://wayne06.github.io/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F01%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>单例模式 单例的定义 一个类只允许创建一个对象，那这个类就是一个单例类，这种设计模式就叫做单例设计模式 单例的用处 有些数据在系统中只应该保存一份：</description>
    </item>
    
    <item>
      <title>ID生成器代码重构</title>
      <link>http://wayne06.github.io/post/%E5%AE%9E%E6%88%98%E4%B8%80id%E7%94%9F%E6%88%90%E5%99%A8/</link>
      <pubDate>Sat, 25 Jan 2020 00:04:12 +0800</pubDate>
      
      <guid>http://wayne06.github.io/post/%E5%AE%9E%E6%88%98%E4%B8%80id%E7%94%9F%E6%88%90%E5%99%A8/</guid>
      <description>重构就是发现代码质量问题，并且对其进行优化的过程。 如何发现代码质量问题 常规checklist：可读、可扩展、可维护、灵活、简洁、可复用、可测</description>
    </item>
    
  </channel>
</rss>